#! STO-3G frequencies for H2O by finite-differences of gradients

molecule h2o {
  0 1
  O
  H 1 0.9894093
  H 1 0.9894093 2 100.02688
}

set {
  basis sto-3g
  d_convergence 11
  scf_type pk
}


# Compute all frequencies with default 3-point formula.
scf_e, scf_wfn = frequencies('scf', dertype=1, return_wfn=True)


scf_vibinfo = scf_wfn.frequency_analysis
scf_vibonly = qcdb.vib.filter_nonvib(scf_vibinfo)
ref_a1_vibonly = qcdb.vib.filter_nonvib(scf_vibonly, remove=[i for i, d in enumerate(scf_vibonly['gamma'].data) if d != 'A1'])
ref_b2_vibonly = qcdb.vib.filter_nonvib(scf_vibonly, remove=[i for i, d in enumerate(scf_vibonly['gamma'].data) if d != 'B2'])

# Compute A1 frequencies only.
scf_e, scf_wfn = frequencies('scf', dertype=1, irrep=1, return_wfn=True)


a1_vibinfo = scf_wfn.frequency_analysis
a1_vibonly = qcdb.vib.filter_nonvib(a1_vibinfo)
compare_integers(1, qcdb.compare_vibinfos(ref_a1_vibonly, a1_vibonly, 2, 'A1 analyses', verbose=0, forgive=[]), 'A1 analyses')

# Compute B2 frequency only.
scf_e, scf_wfn = frequencies('scf', dertype=1, irrep=4, return_wfn=True)


b2_vibinfo = scf_wfn.frequency_analysis
b2_vibonly = qcdb.vib.filter_nonvib(b2_vibinfo)
compare_integers(1, qcdb.compare_vibinfos(ref_b2_vibonly, b2_vibonly, 2, 'B2 analyses', verbose=2, forgive=[]), 'B2 analyses')

# Compute all frequencies with 5-point formula.
set findif { points 5 }
set hessian_write on
set normal_modes_write on

scf_e, scf_wfn = frequencies('scf', dertype=1, return_wfn=True)


clean()
