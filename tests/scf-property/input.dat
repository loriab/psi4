#! UFH and B3LYP cc-pVQZ properties for the CH2 molecule.

molecule ch2 {
    0 3
    c
    h 1 b1
    h 1 b1 2 a1

    b1 = 1.0
    a1 = 125.0
}

# Get a reasonable guess, to save some iterations
set globals = {
    scf_type   pk
    basis      6-31G**
    e_convergence 8
    docc      [2, 0, 0, 1]
    socc      [1, 0, 1, 0]
    reference uhf
}

ch2.update_geometry()
compare_values(6.648418918908746, ch2.nuclear_repulsion_energy(), 9, "Nuclear repulsion energy") #TEST

props = ['DIPOLE', 'QUADRUPOLE', 'MULLIKEN_CHARGES', 'LOWDIN_CHARGES',
         'WIBERG_LOWDIN_INDICES', 'MAYER_INDICES', 'MAYER_INDICES',
         'MO_EXTENTS', 'GRID_FIELD', 'GRID_ESP', 'ESP_AT_NUCLEI',
         'MULTIPOLE(5)', 'NO_OCCUPATIONS']

properties('hf', properties=props)

compare_values(-38.91591819679808, get_variable("CURRENT ENERGY"),   6, "HF energy")         #TEST
compare_values(-38.91591819679808, get_variable("HF TOTAL ENERGY"),  6, "HF energy")         #TEST
compare_values(  0.000000000000,   get_variable('HF DIPOLE X'),      4, "HF DIPOLE X")    #TEST
compare_values(  0.000000000000,   get_variable('HF DIPOLE Y'),      4, "HF DIPOLE Y")    #TEST
compare_values(  0.572697798348,   get_variable('HF DIPOLE Z'),      4, "HF DIPOLE Z")    #TEST
compare_values( -7.664066833060,   get_variable('HF QUADRUPOLE XX'), 4, "HF QUADRUPOLE XX")    #TEST
compare_values( -6.097755074075,   get_variable('HF QUADRUPOLE YY'), 4, "HF QUADRUPOLE YY")    #TEST
compare_values( -7.074596012050,   get_variable('HF QUADRUPOLE ZZ'), 4, "HF QUADRUPOLE ZZ")    #TEST
compare_values(  0.000000000000,   get_variable('HF QUADRUPOLE XY'), 4, "HF QUADRUPOLE XY")    #TEST
compare_values(  0.000000000000,   get_variable('HF QUADRUPOLE XZ'), 4, "HF QUADRUPOLE XZ")    #TEST
compare_values(  0.000000000000,   get_variable('HF QUADRUPOLE YZ'), 4, "HF QUADRUPOLE YZ")    #TEST

properties('B3LYP', properties=props)

compare_values(-39.14134740550916, get_variable('CURRENT ENERGY'),      6, "B3LYP energy")    #TEST
compare_values(-39.14134740550916, get_variable('B3LYP TOTaL ENERGY'),  6, "B3LYP energy")    #TEST
compare_values(  0.000000000000,   get_variable('B3LYP DIPOLE X'),      4, "B3LYP DIPOLE X")    #TEST
compare_values( -0.000000000000,   get_variable('B3LYP DIPOLE Y'),      4, "B3LYP DIPOLE Y")    #TEST
compare_values(  0.641741521158,   get_variable('B3LYP DIPOLE Z'),      4, "B3LYP DIPOLE Z")    #TEST
compare_values( -7.616483183211,   get_variable('B3LYP QUADRUPOLE XX'), 4, "B3LYP QUADRUPOLE XX")    #TEST
compare_values( -6.005896804551,   get_variable('B3LYP QUADRUPOLE YY'), 4, "B3LYP QUADRUPOLE YY")    #TEST
compare_values( -7.021817489904,   get_variable('B3LYP QUADRUPOLE ZZ'), 4, "B3LYP QUADRUPOLE ZZ")    #TEST
compare_values(  0.000000000000,   get_variable('B3LYP QUADRUPOLE XY'), 4, "B3LYP QUADRUPOLE XY")    #TEST
compare_values(  0.000000000000,   get_variable('B3LYP QUADRUPOLE XZ'), 4, "B3LYP QUADRUPOLE XZ")    #TEST
compare_values( -0.000000000000,   get_variable('B3LYP QUADRUPOLE YZ'), 4, "B3LYP QUADRUPOLE YZ")    #TEST
